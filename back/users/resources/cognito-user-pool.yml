Resources:
  CognitoUserPoolDaily:
    Type: AWS::Cognito::UserPool
    Properties:
      # Generate a name based on the stage
      UserPoolName: ${self:provider.stage}DailyIdeaUserPool
      # Set email as an alias
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      # Generate an app client name based on the stage
      ClientName: ${self:provider.stage}DailyIdeaUserPoolClient
      UserPoolId:
        Ref: CognitoUserPoolDaily
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false

# Print out the Id of the User Pool that is created
Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPoolDaily
    Export:
      Name: "CognitoUserPool::Id"
  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient
    Export:
      Name: "CognitoUserPoolClient::Id"

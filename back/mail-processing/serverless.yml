service: 'dailyidea-mail-processing'

package:
  exclude:
    - node_modules/**
    - venv/**

custom:
  ideasTableName: dailyidea-ideas-${self:provider.stage}
  usersTableName: dailyidea-users-${self:provider.stage}
  serverless-offline:
    port: 4000
#  dynamodb:
#    start:
#      port: 8001
#      inMemory: true
#      migrate: true
  domainName: ${env:DOMAIN_NAME, 'beta.dailyidea.com'}
  mailBucket: dailyidea-ses-${env:STAGE}
  ideasMailBox: ${env:IDEAS_MAILBOX, 'ideas-dev'}
  localstack:
    host: http://localhost
    debug: true
    stages:
      - local
    endpoints:
      S3: http://localhost:4572
      DynamoDB: http://localhost:4570
      CloudFormation: http://localhost:4581
      Elasticsearch: http://localhost:4571
      ES: http://localhost:4578
      SNS: http://localhost:4575
      SQS: http://localhost:4576
      Lambda: http://localhost:4574
      Kinesis: http://localhost:4568
  pythonRequirements:
    dockerizePip: non-linux
    pythonBin: /home/orion/envs/idea36/bin/python

  s3Sync:
    - bucketName: ${self:provider.emailStaticBucketName} # required
      localDir: static # required
      acl: public-read

functions:
  processIncomingMail:
    handler: process_incoming_mail.endpoint
  sendDailyToUser:
    handler: request_daily_idea_user.endpoint
    environment:
      BUCKET_URL_PREFIX: 'https://${self:provider.emailStaticBucketName}.s3.amazonaws.com'
      REQUEST_DAILY_EMAIL_TEMPLATE_NAME: ${self:provider.requestDailyIdeaEmailTemplateName}
  sendWeeklyDigest:
    handler: test_send_weekly_digest.handler
    environment:
      BUCKET_URL_PREFIX: 'https://${self:provider.emailStaticBucketName}.s3.amazonaws.com'
  requestIdeasMail:
    handler: request_daily_idea.endpoint
    memorySize: 512
    timeout: 60
    environment:
      BUCKET_URL_PREFIX: 'https://${self:provider.emailStaticBucketName}.s3.amazonaws.com'
      REQUEST_DAILY_EMAIL_TEMPLATE_NAME: ${self:provider.requestDailyIdeaEmailTemplateName}
    events:
      - schedule:
          rate: cron(0 12 * * ? *)
          enabled: true
  weeklyDigest:
    handler: weekly_digest.endpoint
    environment:
      BUCKET_URL_PREFIX: 'https://${self:provider.emailStaticBucketName}.s3.amazonaws.com'
    events:
      - schedule:
          rate: cron(0 12 ? * SUN *)
          enabled: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-localstack
  - serverless-prune-plugin
  - serverless-python-requirements
  - serverless-s3-sync

provider:
  name: 'aws'
  runtime: 'python3.6'
  stage: ${env:STAGE, 'local'}
  region: ${env:AWS_REGION, 'us-east-1'}
  emailStaticBucketName: dailyidea-serverless-email-static-${self:provider.stage}
  requestDailyIdeaEmailTemplateName: requestDailyIdeaEmailTemplate
  environment:
    AWS_DEPLOY_REGION: ${self:provider.region}
    SES_S3_BUCKET_NAME: ${self:custom.mailBucket}
    MAILBOX_ADDR: ${self:custom.ideasMailBox}@${self:custom.domainName}
    DOMAIN_NAME: ${self:custom.domainName}
    SES_AWS_REGION: ${self:provider.region}
    USERS_TABLE_NAME: ${self:custom.usersTableName}
    IDEAS_TABLE_NAME: ${self:custom.ideasTableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource:
        - { "Fn::GetAtt": ["IdeasTable", "Arn" ] }
        - 'Fn::Join':
            - ':'
            - - 'arn:aws:dynamodb'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'table/${self:custom.usersTableName}'
        - 'Fn::Join':
            - ':'
            - - 'arn:aws:dynamodb'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'table/${self:custom.usersTableName}/index/emailIndex'
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource:
        Fn::Join:
          - ""
          -
            - "arn:aws:s3:::"
            -
              Ref: SesEmailStorageS3Bucket
            - "/*"
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendBulkTemplatedEmail
      Resource: "*"
resources:
  - ${file(resources/dynamo-idea-table.yml)}
  - ${file(resources/ses.yml)}
  - ${file(resources/s3.yml)}

